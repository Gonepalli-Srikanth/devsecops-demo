# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
  paths:
    exclude:
      - kubernetes/deployment.yaml
  branches:
    include:
      - main

variables:
  IMAGE_REGISTRY: 'docker.io'
  IMAGE_NAME: 'srikanth1805/demoimage'
  BUILD_TAG: '$(Build.BuildId)'
  DEPLOYMENT_FILE: 'kubernetes/deployment.yaml'
  GITHUB_REPO: 'https://github.com/Gonepalli-Srikanth/devsecops-demo.git'
  GITHUB_BRANCH: 'main'
  GITHUB_USER: 'azure-pipeline'
  GITHUB_EMAIL: 'g.sri843@gmail.com'

# pool:
#   vmImage: ubuntu-latest

stages:
  - stage: testing
    displayName: Testing
    pool:
      vmImage: ubuntu-latest
    jobs:
      - job: 
        steps:
        - task: NodeTaskRunnerInstaller@0
          inputs:
           nodeVersion: '16'

        - task: Npm@1
          displayName: 'npm ci'
          inputs:
            command: ci

        - task: Npm@1
          displayName: 'npm test'
          inputs:
            command: custom
            workingDir: src
            customCommand: test

  - stage: lint
    displayName: lint
    pool:
      vmImage: ubuntu-latest
    jobs:
      - job: 
        steps:
        - task: NodeTaskRunnerInstaller@0
          inputs:
           nodeVersion: '16'

        - task: Npm@1
          displayName: 'npm ci'
          inputs:
            command: ci

        - task: Npm@1
          displayName: 'npm lint'
          inputs:
            command: custom
            workingDir: src
            customCommand: run lint

  - stage: Docker
    displayName: Docker Build and Push
    pool:
      vmImage: ubuntu-latest
    jobs:
      - job: 
        steps:
          - task: Docker@2
            inputs:
              containerRegistry: 'dockerhub'
              repository: 'srikanth1805/demoimage'
              command: 'build'
              Dockerfile: '**/Dockerfile'
              tags: 
                $(Build.BuildId)

          - task: trivy@2
            inputs:
              version: 'latest'
              type: 'image'
              target: 'srikanth1805/demoimage:$(Build.BuildId)'
              scanners: 'license, misconfig, secret, vuln'
              severities: 'HIGH, CRITICAL'
              failOnSeverityThreshold: 'CRITICAL'
              reports: 'github'
              publish: true
          - task: Docker@2
            inputs:
              containerRegistry: 'dockerhub'
              repository: 'srikanth1805/demoimage'
              command: 'push'
              Dockerfile: '**/Dockerfile'
              tags: 
                $(Build.BuildId)

  - stage: update_k8s_deployment
    displayName: update k8s deployment
    pool:
      vmImage: ubuntu-latest
    jobs:
      - job: 
        steps:
        #  - task: ShellScript@2
        #    inputs:
        #      scriptPath: 'src/shellscriptforupdatek8s.sh'
        #      args: '$(imageRepository) $(tag)'

        # - task: PowerShell@2
        #   inputs:
        #     filePath: 'shellscriptforupdatek8s.ps1'
        #     arguments: '$(imageRepository) $(tag)'
          - task: Bash@3
            displayName: 'Update Image Tag in deployment.yml'
            inputs:
              targetType: 'inline'
              script: |
                echo "Updating image tag in deployment.yml to $(BUILD_TAG)"
                sed -i 's|image: $(IMAGE_REGISTRY)/$(IMAGE_NAME):.*|image: $(IMAGE_REGISTRY)/$(IMAGE_NAME):$(BUILD_TAG)|' $(DEPLOYMENT_FILE)

        
          - task: Bash@3
            displayName: 'Commit and Push Changes to GitHub'
            inputs:
              targetType: 'inline'
              script: |
                git config user.email "$(GITHUB_EMAIL)"
                git config user.name "$(GITHUB_USER)"
                git remote set-url origin https://$(System.AccessToken)@github.com/Gonepalli-Srikanth/devsecops-demo.git
                git checkout $(GITHUB_BRANCH)
                git add $(DEPLOYMENT_FILE)
                git commit -m "Update image tag to $(BUILD_TAG)"
                git push origin $(GITHUB_BRANCH)
            env:
              SYSTEM_ACCESSTOKEN: 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

          


                

