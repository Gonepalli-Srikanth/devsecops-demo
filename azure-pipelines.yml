# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

variables:
  imageRepository: 'srikanth1805/demoimage'
  tag: '$(Build.BuildId)'

# pool:
#   vmImage: ubuntu-latest

stages:
  - stage: testing
    displayName: Testing
    pool:
      vmImage: ubuntu-latest
    jobs:
      - job: 
        steps:
        - task: NodeTaskRunnerInstaller@0
          inputs:
           nodeVersion: '16'

        - task: Npm@1
          displayName: 'npm ci'
          inputs:
            command: ci

        - task: Npm@1
          displayName: 'npm test'
          inputs:
            command: custom
            workingDir: src
            customCommand: test

  - stage: lint
    displayName: lint
    pool:
      vmImage: ubuntu-latest
    jobs:
      - job: 
        steps:
        - task: NodeTaskRunnerInstaller@0
          inputs:
           nodeVersion: '16'

        - task: Npm@1
          displayName: 'npm ci'
          inputs:
            command: ci

        - task: Npm@1
          displayName: 'npm lint'
          inputs:
            command: custom
            workingDir: src
            customCommand: run lint

  - stage: Docker
    displayName: Docker Build and Push
    pool:
      vmImage: ubuntu-latest
    jobs:
      - job: 
        steps:
          - task: Docker@2
            inputs:
              containerRegistry: 'dockerhub'
              repository: 'srikanth1805/demoimage'
              command: 'build'
              Dockerfile: '**/Dockerfile'
              tags: 
                $(Build.BuildId)

          - task: trivy@2
            inputs:
              version: 'latest'
              type: 'image'
              target: 'srikanth1805/demoimage:$(Build.BuildId)'
              scanners: 'license, misconfig, secret, vuln'
              severities: 'HIGH, CRITICAL'
              failOnSeverityThreshold: 'CRITICAL'
              reports: 'github'
              publish: true
          - task: Docker@2
            inputs:
              containerRegistry: 'dockerhub'
              repository: 'srikanth1805/demoimage'
              command: 'push'
              Dockerfile: '**/Dockerfile'
              tags: 
                $(Build.BuildId)

  - stage: update_k8s_deployment
    displayName: update k8s deployment
    pool:
      vmImage: ubuntu-latest
    jobs:
      - job: 
        steps:
        - task: ShellScript@2
          inputs:
            scriptPath: 'src/updateK8sManifests.sh'
            args: 'vote $(imageRepository) $(tag)'
          
          


                

